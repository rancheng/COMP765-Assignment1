<?xml version="1.0"?>

<!-- The Aqua URDF specifies the positions of the robot's sensors and actuators.
     It can be parsed by the xacro package to be translated into tf frames and 
     a robot model compatible with rviz for vizualization.

     Author: Dave Meger, Anqi Xu, Bikram Dey, Juan Camilo Gamboa
     Date:   Nov 21, 2012

     Revision history:

     Rev1:  Basic box shaped model and legs that can be actuated as revolute joints.
         Rev2:  Added 3D mesh of aqua with help from Anqi and Bikram.
         Rev3:  Added frames for cameras.
         Rev4:  Updated to Hydro/Indigo xacro compatibility
         Rev5:  Updated 3d meshes, separated the hips and the shoulder meshes, updated the inertial parameters, added damping to the joints, added ballasting links (2014)
         Rev6:  Removed hip joints (2015)
         Rev7:  Updated compatibility with Gazebo 7 (2016)
         Rev8:  Updated the collision geometry meshes (2016)
 -->

<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="aqua">
    <xacro:include filename="$(find aqua_description)/urdf/materials.urdf.xacro" />

    <!-- ========= BEGIN CONSTANT DEFINITIONS =========== -->

    <xacro:property name="M_PI" value="3.1415926535897931" />

    <xacro:property name="shell_size_x" value="0.64" />
    <xacro:property name="shell_size_y" value="0.21" />
    <xacro:property name="shell_size_z" value="0.125" />

    <xacro:property name="leg_size_x" value="0.192" />
    <xacro:property name="leg_size_y" value="0.065" />
    <xacro:property name="leg_size_z" value="0.0035" />

    <xacro:property name="hip_radius" value="0.029" />
    <xacro:property name="hip_length" value="0.032" />
    <xacro:property name="mid_hip_length" value="0.082"/>

    <xacro:property name="shoulder_size_x" value="0.06" />
    <xacro:property name="shoulder_size_y" value="0.035" />
    <xacro:property name="shoulder_size_z" value="0.02" />

    <xacro:property name="shell_mass" value="14.405"/> <!-- total is 16.4 -->
    <xacro:property name="leg_mass" value="0.120"/>
    <xacro:property name="shoulder_mass" value="0.045"/>
    <xacro:property name="zinc_density" value="7000.0"/> <!-- from approximate measurements from physical zinc weights used on aqua-->
    <xacro:property name="steel_density" value="8000.0"/> <!-- approximate measurements from physical ballast plates -->

    <!-- ========= BEGIN MACRO DEFINITIONS =========== -->
    <!-- LEGS -->
    <xacro:macro name="leg" params="name">
        <link name="${name}_leg">
            <visual name="leg_visual">
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry name="leg_visual_geom">  
                    <box size="${leg_size_x} ${leg_size_y} ${leg_size_z}" />
                </geometry>
                <material name="Red" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <!--box size="${leg_size_x} ${leg_size_y} ${leg_size_z}" /-->
                    <mesh filename="package://aqua_description/meshes/unit_box.stl" scale="${leg_size_x} ${leg_size_y} ${leg_size_z}"/>
                </geometry>
            </collision>
            <inertial>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <mass value="${leg_mass}"/>
                <inertia ixx="${leg_mass*(leg_size_y*leg_size_y + leg_size_z*leg_size_z)/12}" ixy="0.00" ixz="0.00" iyy="${leg_mass*(leg_size_x*leg_size_x + leg_size_z*leg_size_z)/12}" iyz="0.00" izz="${leg_mass*(leg_size_x*leg_size_x + leg_size_y*leg_size_y)/12}"/>
            </inertial>
        </link>
    </xacro:macro>

    <!-- SHOULDERS -->
    <xacro:macro name="shoulder" params="name">
        <link name="${name}_shoulder">
            <visual name="shoulder_visual">
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry name="shoulder_visual_geom">
                    <mesh filename="package://aqua_description/meshes/shoulder.stl" scale="1.0 1.0 1.0" />
                </geometry>
                <material name="Black" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <!--box size="${shoulder_size_x} ${shoulder_size_y} ${shoulder_size_z}" /-->
                    <!--mesh filename="package://aqua_description/meshes/leg_joint.STL" scale="1.0 1.0 1.0" /-->
                    <mesh filename="package://aqua_description/meshes/shoulder_collision.stl" scale="1.0 1.0 1.0" />
                </geometry>
            </collision>
            <inertial>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <mass value="${shoulder_mass}"/>
                <inertia ixx="${shoulder_mass*(shoulder_size_y*shoulder_size_y + shoulder_size_z*shoulder_size_z)/12}" ixy="0.00" ixz="0.00" iyy="${shoulder_mass*(shoulder_size_x*shoulder_size_x + shoulder_size_z*shoulder_size_z)/12}" iyz="0.00" izz="${shoulder_mass*(shoulder_size_x*shoulder_size_x + shoulder_size_y*shoulder_size_y)/12}"/>
            </inertial>
        </link>
    </xacro:macro>

    <!-- BALLASTING -->
    <xacro:macro name="rectangular_ballast_weight" params="name xyz rpy density length width height">
        <link name="${name}_ballast">
            <visual name="ballast_visual">
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry name="ballast_visual_geom">  
                    <box size="${length} ${width} ${height}" />
                </geometry>
                <material name="Gray" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <box size="${length} ${width} ${height}"/>
                </geometry>
            </collision>
            <inertial>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <mass value="${density*length*width*height}"/>
                <inertia ixx="${(density*length*width*height)*(width*width + height*height)/12}" ixy="0.00" ixz="0.00" iyy="${(density*length*width*height)*(length*length + height*height)/12}" iyz="0.00" izz="${(density*length*width*height)*(length*length + width*width)/12}"/>
            </inertial>
        </link>
        <joint name="base_joint_${name}" type="revolute">
            <limit upper="0.0" lower="0.0" effort="0.0" velocity="0.0"/>
            <origin xyz="${xyz}" rpy="${rpy}" />
            <axis xyz="0 1 0" />
            <parent link="aqua_base"/>
            <child link="${name}_ballast"/>
        </joint>
    </xacro:macro>

    <!-- SHOULDER JOINTS -->
    <xacro:macro name="shoulder_joint" params="name xyz rpy axis">
        <joint name="${name}_shoulder_joint" type="continuous">
            <origin xyz="${xyz}" rpy="${rpy}" />
            <dynamics damping="0.1" friction="0.1"/>
            <axis xyz="${axis}" />
            <parent link="aqua_shell"/>
            <child link="${name}_shoulder"/>
        </joint>
    </xacro:macro>

    <!-- LEG JOINTS -->
    <xacro:macro name="leg_joint" params="name">
        <joint name="${name}_leg_joint" type="revolute">
            <limit upper="0.0" lower="0.0" effort="0.0" velocity="0.0"/>
            <dynamics damping="1.0" friction="1.0"/>
            <origin xyz="-${0.008 + leg_size_x/2} 0 -${leg_size_z/2}" rpy="0 0 0" />
            <axis xyz="0 1 0" />
            <parent link="${name}_shoulder"/>
            <child link="${name}_leg"/>
        </joint>
    </xacro:macro>

  <!-- GAZEBO MACROS -->
  <xacro:macro name="leg_gazebo" params="name">
      <gazebo reference="${name}_leg">
          <material>Gazebo/Red</material>
          <selfCollide>false</selfCollide>
          <!--dampingFactor>0.0001</dampingFactor-->
      </gazebo>
      <gazebo reference="${name}_leg_joint">
          <implicitSpringDamper>true</implicitSpringDamper>
      </gazebo>
  </xacro:macro>

  <xacro:macro name="shoulder_gazebo" params="name">
      <gazebo reference="${name}_shoulder">
          <material>Gazebo/Black</material>
          <selfCollide>false</selfCollide>
          <!--dampingFactor>0.0001</dampingFactor-->
      </gazebo>
      <!--gazebo reference="${name}_shoulder_joint">
          <implicitSpringDamper>true</implicitSpringDamper>
      </gazebo-->
  </xacro:macro>

  <!-- ========= BEGIN LINK DEFINITIONS =========== -->

  <link name="aqua_base">
  </link>

  <!-- The parent link is the robots shell, silver and red in the same position -->
  <link name="aqua_shell">
      <visual name="shell_visual">
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry name="shell_visual_geom">
              <mesh filename="package://aqua_description/meshes/aqua_body.stl" scale="1.0 1.0 1.0" />
          </geometry>
          <material name="metal">
            <color rgba="0.2 0.2 0.2 0.99999"/>
          </material>
      </visual>
      <collision>
          <geometry>
              <!-- the scale is corrected by a little bit to account for the over estimation of the volume in the model (it has some ballasting plates) -->
              <mesh filename="package://aqua_description/meshes/aqua_body_collision_1000_2.stl" scale="1.0 1.0 0.975" />
          </geometry>
      </collision>
      <inertial>
          <!--- this center of mass was obtained from meshlab, so probably slighltly wrong -->
          <origin xyz="-0.0082217 -0.0011512 -0.0052371" rpy="0 0 0" />
          <!-- the mass was measured on ramius (aqua4) with the batteries inside -->
          <mass value="${shell_mass}"/>
          <!--inertia ixx="${shell_mass*(shell_size_y*shell_size_y + shell_size_z*shell_size_z)/12}" ixy="0.00" ixz="0.00" iyy="${shell_mass*(shell_size_x*shell_size_x + shell_size_z*shell_size_z)/12}" iyz="0.00" izz="${shell_mass*(shell_size_x*shell_size_x + shell_size_y*shell_size_y)/12}"/-->
          <!-- computed with meshlab by
               1) loading aqua_body.stl
               2) scaling it 10 times in each dimension
               3) computing the geometric measurements (in Filters->Quality Measures and Computations)
               4) dividing the repoted inertia by 100 (scale factor)
               5) dividing the result by reported volume and multiplying by measured mass -->
          <inertia ixx="${0.06762729295778704963}" ixy="${-0.00743579109825349537}" ixz="${-0.0017041777467544214}" iyy="${0.27789624395031214954}" iyz="${-0.00069697735739706918}" izz="${0.31521251562952778968}"/>
      </inertial>
  </link>


  <!-- CAMERA LINKS -->

  <link name="camera_front_left">
      <visual name="camera_front_left_visual">
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry name="camera_front_left_visual_geom">  
              <box size="0.0001 0.00025 0.00025" />
          </geometry>
      </visual>
  </link>

  <link name="camera_front_right">
      <visual name="camera_front_right_visual">
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry name="camera_front_right_visual_geom">  
              <box size="0.0001 0.00025 0.00025" />
          </geometry>
      </visual>
  </link>

  <link name="camera_front_right_down">
      <visual name="camera_front_right_down_visual">
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry name="camera_front_right_down_visual_geom">  
              <box size="0.0001 0.00025 0.00025" />
          </geometry>
      </visual>
  </link>
  <!-- BALLASTING LINKS -->
                                
  <xacro:rectangular_ballast_weight name="ballast_plate_1" 
                                    density="${steel_density}" 
                                    xyz="${0.15*shell_size_x} ${0} ${(shell_size_z/2.0+0.00275)}" 
                                    rpy="0 0 0"
                                    length="0.14"
                                    width="0.2"
                                    height="0.0015"/>
                                
  <xacro:rectangular_ballast_weight name="ballast_plate_2" 
                                    density="${steel_density}" 
                                    xyz="${0.16*shell_size_x} ${0} ${-(shell_size_z/2.0+0.00275)}" 
                                    rpy="0 0 0"
                                    length="0.25"
                                    width="0.2"
                                    height="0.0015"/>
                                
  <xacro:rectangular_ballast_weight name="ballast_weight_1" 
                                    density="${zinc_density}" 
                                    xyz="${-0.3*shell_size_x} ${-0.5*shell_size_y+0.015} ${-(shell_size_z/2.0+0.002)}" 
                                    rpy="0 0 0"
                                    length="0.09"
                                    width="0.02"
                                    height="0.004"/>

  <xacro:rectangular_ballast_weight name="ballast_weight_2" 
                                    density="${zinc_density}" 
                                    xyz="${-0.29*shell_size_x} ${-0.5*shell_size_y+0.012} ${(shell_size_z/2.0+0.00325)}" 
                                    rpy="0 0 0"
                                    length="0.105"
                                    width="0.01221"
                                    height="0.007"/>

  <xacro:rectangular_ballast_weight name="ballast_weight_3" 
                                    density="${zinc_density}" 
                                    xyz="${-0.09} ${-0.5*shell_size_y+0.012} ${(shell_size_z/2.0+0.00325)}" 
                                    rpy="0 0 0"
                                    length="0.105"
                                    width="0.01221"
                                    height="0.007"/>

  <xacro:rectangular_ballast_weight name="ballast_weight_4" 
                                    density="${zinc_density}" 
                                    xyz="${-0.09} ${0.5*shell_size_y-0.012} ${(shell_size_z/2.0+0.00325)}" 
                                    rpy="0 0 0"
                                    length="0.105"
                                    width="0.01221"
                                    height="0.007"/>

  <xacro:rectangular_ballast_weight name="ballast_weight_5" 
                                    density="${zinc_density}" 
                                    xyz="${-0.29*shell_size_x} ${0.5*shell_size_y-0.012} ${(shell_size_z/2.0+0.00325)}" 
                                    rpy="0 0 0"
                                    length="0.105"
                                    width="0.01221"
                                    height="0.007"/>

  <xacro:rectangular_ballast_weight name="ballast_weight_6" 
                                    density="${zinc_density}" 
                                    xyz="${-0.065} ${0.01} ${-(shell_size_z/2.0+0.006)}" 
                                    rpy="0 0 0"
                                    length="0.015"
                                    width="0.15"
                                    height="0.012"/>

  <!-- DEPTH SENSOR LINK -->
  <!--link name="depth_sensor">
    <visual name="depth_sensor_visual">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry name="depth_sensor_visual_geom">  
    <box size="0 0 0" />
      </geometry>
      <material name="White" />
    </visual>
    <inertial>
        <origin xyz="0 0 0" rpy="0 0 0" /-->
        <!-- these are dummy values, otherwise gazebo will ignore this link -->
        <!--mass value="${eps1}"/>
        <inertia ixx="${eps2}" ixy="0.00" ixz="0.00" iyy="${eps2}" iyz="0.00" izz="${eps2}"/>
    </inertial>
  </link-->

  <!-- FRONT LEFT LINKS -->

  <xacro:leg name="left_front"/>

  <xacro:shoulder name="left_front"/>

  <!-- MID LEFT LINKS -->

  <xacro:leg name="left_mid"/>

  <xacro:shoulder name="left_mid"/>

  <!-- REAR LEFT LINKS -->

  <xacro:leg name="left_rear"/>

  <xacro:shoulder name="left_rear"/>

  <!-- FRONT RIGHT LINKS -->

  <xacro:leg name="right_front"/>

  <xacro:shoulder name="right_front"/>

  <!-- MID RIGHT LINKS -->

  <xacro:leg name="right_mid"/>

  <xacro:shoulder name="right_mid"/>

  <!-- REAR RIGHT LINKS -->

  <xacro:leg name="right_rear"/>

  <xacro:shoulder name="right_rear"/>

  <!-- ========= BEGIN JOINT DEFINITIONS =========== -->

  <!-- BASE JOINT -->

  <joint name="base_joint_shell" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 0" />
      <axis xyz="0 1 0" />
      <parent link="aqua_base"/>
      <child link="aqua_shell"/>
  </joint>

  <!-- CAMERA JOINTS -->

  <joint name="front_left_camera_joint" type="fixed">
      <origin xyz="${shell_size_x/2} ${shell_size_y/3} 0" rpy="${M_PI/2} ${M_PI} ${M_PI/2}" />
      <axis xyz="0 1 0" />
      <parent link="aqua_shell"/>
      <child link="camera_front_left"/>
  </joint>

  <joint name="front_right_camera_joint" type="fixed">
      <origin xyz="${3*shell_size_x/5} -${shell_size_y/3} 0" rpy="${M_PI/2} ${M_PI} ${M_PI/2}" />
      <axis xyz="0 1 0" />
      <parent link="aqua_shell"/>
      <child link="camera_front_right"/>
  </joint>

  <joint name="front_right_camera_down_joint" type="fixed">
      <origin xyz="0 0 0" rpy="0 0 ${M_PI/2}" />
      <axis xyz="0 1 0" />
      <parent link="camera_front_right"/>
      <child link="camera_front_right_down"/>
  </joint>

  <!-- DEPTH SENSOR JOINT -->

  <!-- making this joint revolute instead of fixed is a hack, so that is appears in the gazebo simulation -->
  <!--joint name="depth_sensor_joint" type="revolute">
    <limit upper="0.0" lower="0.0" effort="0" velocity="0"/>
    <origin xyz="-${shell_size_x/2} 0 0" rpy="0 0 ${M_PI}" />
    <axis xyz="0 1 0" />
    <parent link="aqua_shell"/>
    <child link="depth_sensor"/>
  </joint -->

  <!-- FRONT LEFT JOINTS -->
  <xacro:leg_joint name="left_front" />  

  <xacro:shoulder_joint name="left_front" xyz="${shell_size_x/2 - 0.10*shell_size_x - 0.007} ${shell_size_y/2 + hip_length + shoulder_size_y/2} 0" rpy="0 0 0" axis="0 -1 0"/>  

  <!-- MID LEFT JOINTS -->
  <xacro:leg_joint name="left_mid" />

  <xacro:shoulder_joint name="left_mid" xyz="-0.007 ${shell_size_y/2 + mid_hip_length + shoulder_size_y/2} 0" rpy="0 0 0" axis="0 -1 0" />

  <!-- REAR LEFT JOINTS -->
  <xacro:leg_joint name="left_rear"/>

  <xacro:shoulder_joint name="left_rear" xyz="-${shell_size_x/2 - 0.10*shell_size_x - 0.007} ${shell_size_y/2 + hip_length + shoulder_size_y/2} 0" rpy="0 0 0" axis="0 -1 0" />
  
  <!-- FRONT RIGHT JOINTS -->
  <xacro:leg_joint name="right_front"/>  

  <xacro:shoulder_joint name="right_front" xyz="${shell_size_x/2 - 0.10*shell_size_x - 0.007} -${shell_size_y/2 + hip_length + shoulder_size_y/2} 0" rpy="0 0 0" axis="0 -1 0" />  

  <!-- MID RIGHT JOINTS -->
  <xacro:leg_joint name="right_mid"/>

  <xacro:shoulder_joint name="right_mid" xyz="-0.007 -${shell_size_y/2 + mid_hip_length + shoulder_size_y/2} 0" rpy="0 0 0" axis="0 -1 0"  />  

  <!-- REAR RIGHT JOINTS -->
  <xacro:leg_joint name="right_rear"/>

  <xacro:shoulder_joint name="right_rear" xyz="-${shell_size_x/2 - 0.10*shell_size_x - 0.007} -${shell_size_y/2 + hip_length + shoulder_size_y/2} 0" rpy="0 0 0" axis="0 -1 0"  />  

  <!-- GAZEBO SPECIFIC SETTINGS -->
  <!-- gazebo materials -->
  <gazebo reference="aqua_shell">
      <material>Gazebo/Grey</material>
      <selfCollide>false</selfCollide>
  </gazebo>
  <gazebo reference="aqua_base">
      <selfCollide>false</selfCollide>
      <!--dampingFactor>0.001</dampingFactor-->
  </gazebo>
  <xacro:leg_gazebo name="left_front" />  
  <xacro:shoulder_gazebo name="left_front" />  
  <xacro:leg_gazebo name="left_mid" />  
  <xacro:shoulder_gazebo name="left_mid" />  
  <xacro:leg_gazebo name="left_rear" />  
  <xacro:shoulder_gazebo name="left_rear" />  
  <xacro:leg_gazebo name="right_front" />  
  <xacro:shoulder_gazebo name="right_front" />  
  <xacro:leg_gazebo name="right_mid" />  
  <xacro:shoulder_gazebo name="right_mid" />  
  <xacro:leg_gazebo name="right_rear" />  
  <xacro:shoulder_gazebo name="right_rear" />  

</robot>
